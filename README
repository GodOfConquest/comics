Daily Comics (aka comics)
=========================

Daily Comics is a web based aggregator for web comics. It was originally
developed as a custom web application hosted at http://comics.jodal.no/, but
the source code has later been released for others to change and use.

Daily Comics is maintained by Stein Magnus Jodal, with comments and input from
numerous users. The software is freely available under the GPLv2 license. You
can get the source using the version control system git and the command

    git clone git://github.com/jodal/comics.git

or you can browse the source online at http://github.com/jodal/comics.

Feature requests, bug reports and patches are warmly received, read and replied
to at comics@jodal.no or through the feedback page at
http://comics.jodal.no/feedback/.


Is it legal?
------------

The code is legal. Copying and distributing some of the comics may not be.
Anyway nobody is making any money here, and the intention is having fun
developing software and reading comics.


Dependencies
------------

The dependencies are listed as Debian/Ubuntu package names.

- python (>=2.5, at least hashlib is new in 2.5)
- python-django (>=1.0)
- python-feedparser
- python-lxml

Optional dependencies if you want to use a real database and/or memcache:

- python-psycopg2
- postgresql-X.Y (developed with 8.3)
- cmemcache (from source, or alternatively python-memcache)

Additional dependencies which are handy for development:

- python-pmock (for mocking in unit tests)
- python-coverage (for checking test coverage)
- debug_toolbar (for debugging, from
  http://code.google.com/p/django-debug-toolbar/)


Installation
------------

To get comics up and running from a clean checkout is as easy as:

    git clone git://github.com/jodal/comics.git
    cd comics/comics/
    python manage.py syncdb
    python manage.py loadmeta
    python manage.py crawlcomics
    python manage.py runserver

Then point your browser to http://localhost:8000/ to start reading comics.


Usage
-----

To run unit tests:

    python manage.py test --settings=comics.settings.testing

To run unit tests with statement coverage:

    python manage.py test --settings=comics.settings.coverage

To load meta data for new or existing comics:

    python manage.py loadmeta

To fetch new comic strips:

    python manage.py getcomics

Add `--help` to get further instructions.


TODO
----

A mostly unordered list of things to fix. Patches accepted.

- Change the name of BaseComicCrawler._get_url() into something more fitting.
- Consider wrapping the feedparser object in our own feedparser:
  - which provides all entries for a given date.
  - whose entries got methods for:
    - extracting URLs from i.e. the summary field using lxml.
    - stripping out HTML from the summary field.
- comics.aggregator.command:
  - Use comic week schedule to crawl less often on non-schedule days.
  - Use comics time zone to crawl the correct current date.
- comics.core.utils.navigation: Unit test and refactor to a tree of OO
  classes instead of long complicated functions.

New features:

- Support multiple strips per comic per day, which at least includes:
    - Some places were this is not supported, it is commented in the source.
    - Change naming scheme for image files, i.e. from date to checksum.
- Replace "Top 10" default views with a stream of the most recently fetched
  comics. Consider not having alternative time frame views, but using regular
  pagination.


Further documentation
---------------------

Use the force, read the source.
